var wikihistory =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_master__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/master */ \"./src/modules/master.js\");\n\n\nclass App {\n  constructor() {\n    this.master = new _modules_master__WEBPACK_IMPORTED_MODULE_0__[\"Master\"]();\n  }\n}\n\nwindow.onload = () => {\n  const app = new App();\n};\n\n//# sourceURL=webpack://wikihistory/./src/app.js?");

/***/ }),

/***/ "./src/modules/api/api_handler.js":
/*!****************************************!*\
  !*** ./src/modules/api/api_handler.js ***!
  \****************************************/
/*! exports provided: APIHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"APIHandler\", function() { return APIHandler; });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ \"./src/modules/config/index.js\");\n\n\nclass APIHandler {\n  constructor() {\n    // NOTE use action=parse to get html in content\n    // setting rvprop=content reduces rate limit by 10 times\n    this.endpoint = _config__WEBPACK_IMPORTED_MODULE_0__[\"config\"].endpoint;\n    this.action = '?action=query';\n    this.props = {\n      meta: '&prop=revisions&rvprop=ids|user|userid|flags|tags|timestamp|comment|user',\n      content: '&prop=revisions&rvprop=content|ids|user|userid|flags|tags|timestamp|comment|user'\n    };\n    this.limit = {\n      meta: '&rvlimit=max',\n      content: '&rvlimit=5'\n    };\n    this.format = '&format=json&formatversion=2';\n  }\n\n  getRevMeta(title) {\n    // build request string, get meta\n    const props = `${this.props.meta}${this.limit.meta}`;\n    const req = `${this.endpoint}${this.action}&titles=${title.replace(/ /g, '%20')}${props}${this.format}`;\n    console.log('Request:', req);\n\n    return new Promise((resolve, reject) => {\n      $.ajax({\n        type: 'POST',\n        url: 'call_api.php',\n        dataType: 'json',\n        data: { request: req },\n        success: res => {\n          resolve(res);\n        },\n        error: err => {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  getRevContent(title) {\n    // build request string, get page\n    const props = `${this.props.content}${this.limit.content}`;\n    const req = `${this.endpoint}${this.action}&titles=${title.replace(/ /g, '%20')}${props}${this.format}`;\n    console.log('Request:', req);\n\n    return new Promise((resolve, reject) => {\n      $.ajax({\n        type: 'POST',\n        url: 'call_api.php',\n        dataType: 'json',\n        data: { request: req },\n        success: res => {\n          resolve(res);\n        },\n        error: err => {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  getSampleContent(title) {\n    const key = this.formatTitle(title);\n    return new Promise((resolve, reject) => {\n      if (_config__WEBPACK_IMPORTED_MODULE_0__[\"samples\"][key]) {\n        resolve(_config__WEBPACK_IMPORTED_MODULE_0__[\"samples\"][key]);\n      } else {\n        reject(key);\n      }\n    });\n  }\n\n  getSampleMeta(title) {\n    const key = this.formatTitle(title);\n    return new Promise((resolve, reject) => {\n      if (_config__WEBPACK_IMPORTED_MODULE_0__[\"metaSamples\"][key]) {\n        resolve(_config__WEBPACK_IMPORTED_MODULE_0__[\"metaSamples\"][key]);\n      } else {\n        reject(key);\n      }\n    });\n  }\n\n  formatTitle(title) {\n    return title.toLowerCase().replace(/ /g, '_');\n  }\n}\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/api/api_handler.js?");

/***/ }),

/***/ "./src/modules/api/index.js":
/*!**********************************!*\
  !*** ./src/modules/api/index.js ***!
  \**********************************/
/*! exports provided: APIHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _api_handler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api_handler */ \"./src/modules/api/api_handler.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"APIHandler\", function() { return _api_handler__WEBPACK_IMPORTED_MODULE_0__[\"APIHandler\"]; });\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/api/index.js?");

/***/ }),

/***/ "./src/modules/config/config.js":
/*!**************************************!*\
  !*** ./src/modules/config/config.js ***!
  \**************************************/
/*! exports provided: config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"config\", function() { return config; });\nconst config = {\n  endpoint: 'https://en.wikipedia.org/w/api.php',\n  urlBase: 'https://en.wikipedia.org/wiki/'\n};\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/config/config.js?");

/***/ }),

/***/ "./src/modules/config/index.js":
/*!*************************************!*\
  !*** ./src/modules/config/index.js ***!
  \*************************************/
/*! exports provided: config, samples, metaSamples */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/modules/config/config.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"config\", function() { return _config__WEBPACK_IMPORTED_MODULE_0__[\"config\"]; });\n\n/* harmony import */ var _samples__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./samples */ \"./src/modules/config/samples.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"samples\", function() { return _samples__WEBPACK_IMPORTED_MODULE_1__[\"samples\"]; });\n\n/* harmony import */ var _meta_samples__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./meta_samples */ \"./src/modules/config/meta_samples.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"metaSamples\", function() { return _meta_samples__WEBPACK_IMPORTED_MODULE_2__[\"metaSamples\"]; });\n\n\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/config/index.js?");

/***/ }),

/***/ "./src/modules/config/meta_samples.js":
/*!********************************************!*\
  !*** ./src/modules/config/meta_samples.js ***!
  \********************************************/
/*! exports provided: metaSamples */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metaSamples\", function() { return metaSamples; });\nconst metaSamples = {\n  \"a_wind_named_amnesia\": {\n    \"batchcomplete\": true,\n    \"query\": {\n      \"pages\": [{\n        \"pageid\": 3609415,\n        \"ns\": 0,\n        \"title\": \"A Wind Named Amnesia\",\n        \"revisions\": [{\n          \"revid\": 828436237,\n          \"parentid\": 826423144,\n          \"minor\": false,\n          \"user\": \"Xezbeth\",\n          \"userid\": 86247,\n          \"timestamp\": \"2018-03-02T14:59:23Z\",\n          \"comment\": \"+[[Category:1983 Japanese novels]]\",\n          \"tags\": []\n        }, {\n          \"revid\": 826423144, \"parentid\": 825646474, \"minor\": true, \"user\": \"Tom.Reding\", \"userid\": 9784415, \"timestamp\": \"2018-02-19T01:02:12Z\", \"comment\": \"Fix [[:Category:Pages using deprecated image syntax]]; [[WP:GenFixes]] on, using [[Project:AWB|AWB]]\", \"tags\": [] }, { \"revid\": 825646474, \"parentid\": 817961708, \"minor\": false, \"user\": \"92.29.56.125\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2018-02-14T15:48:18Z\", \"comment\": \"/* Plot */\", \"tags\": [] }, { \"revid\": 817961708, \"parentid\": 817961568, \"minor\": false, \"user\": \"SimonLagann\", \"userid\": 31130001, \"timestamp\": \"2017-12-31T16:48:25Z\", \"comment\": \"/* External links */\", \"tags\": [] }, { \"revid\": 817961568, \"parentid\": 807920603, \"minor\": false, \"user\": \"SimonLagann\", \"userid\": 31130001, \"timestamp\": \"2017-12-31T16:47:01Z\", \"comment\": \"/* External links */\", \"tags\": [] }, { \"revid\": 807920603, \"parentid\": 807775636, \"minor\": true, \"user\": \"Binksternet\", \"userid\": 4967956, \"timestamp\": \"2017-10-30T21:03:28Z\", \"comment\": \"Reverted 1 edit by [[Special:Contributions/179.185.91.90|179.185.91.90]] ([[User talk:179.185.91.90|talk]]) to last revision by Jim1138. ([[WP:TW|TW]])\", \"tags\": [] }, { \"revid\": 807775636, \"parentid\": 807640445, \"minor\": false, \"user\": \"179.185.91.90\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2017-10-30T01:55:53Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 807640445, \"parentid\": 807639815, \"minor\": true, \"user\": \"Jim1138\", \"userid\": 7695475, \"timestamp\": \"2017-10-29T06:41:38Z\", \"comment\": \"Reverted edits by [[Special:Contributions/179.185.91.90|179.185.91.90]] ([[User talk:179.185.91.90|talk]]): unexplained content removal ([[WP:HG|HG]]) (3.3.2)\", \"tags\": [\"huggle\"] }, { \"revid\": 807639815, \"parentid\": 797493961, \"minor\": false, \"user\": \"179.185.91.90\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2017-10-29T06:33:44Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 797493961, \"parentid\": 797493772, \"minor\": false, \"user\": \"46.107.157.20\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2017-08-27T11:32:15Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 797493772, \"parentid\": 797493751, \"minor\": false, \"user\": \"46.107.157.20\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2017-08-27T11:30:14Z\", \"comment\": \"\", \"tags\": [\"wikilinks removed\"] }, { \"revid\": 797493751, \"parentid\": 788394419, \"minor\": false, \"user\": \"46.107.157.20\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2017-08-27T11:29:58Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 788394419, \"parentid\": 787296519, \"minor\": true, \"user\": \"PrimeBOT\", \"userid\": 29463730, \"timestamp\": \"2017-07-01T04:22:55Z\", \"comment\": \"Replace [[Help:Magic_links|magic links]] with templates per [[Special:PermaLink/772743896#Future_of_magic_links|local RfC]] - [[User:PrimeBOT/13|BRFA]]\", \"tags\": [] }, { \"revid\": 787296519, \"parentid\": 786119310, \"minor\": false, \"user\": \"InternetArchiveBot\", \"userid\": 27015025, \"timestamp\": \"2017-06-24T16:05:54Z\", \"comment\": \"Rescuing 2 sources and tagging 0 as dead. #IABot (v1.4beta3)\", \"tags\": [] }, { \"revid\": 786119310, \"parentid\": 782329237, \"minor\": true, \"user\": \"Alakazander\", \"userid\": 17403565, \"timestamp\": \"2017-06-17T11:22:13Z\", \"comment\": \"I doubt this was directed by the professional wrestler\", \"tags\": [] }, { \"revid\": 782329237, \"parentid\": 770205749, \"minor\": false, \"user\": \"PatTheMoron\", \"userid\": 22301165, \"timestamp\": \"2017-05-26T06:09:13Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 770205749, \"parentid\": 767441258, \"minor\": false, \"user\": \"PatTheMoron\", \"userid\": 22301165, \"timestamp\": \"2017-03-14T01:33:17Z\", \"comment\": \"/* Staff */\", \"tags\": [] }, { \"revid\": 767441258, \"parentid\": 764595955, \"minor\": false, \"user\": \"PatTheMoron\", \"userid\": 22301165, \"timestamp\": \"2017-02-25T23:19:37Z\", \"comment\": \"/* Voice Cast */\", \"tags\": [] }, { \"revid\": 764595955, \"parentid\": 755044891, \"minor\": true, \"user\": \"Dollargrabbag\", \"userid\": 24843317, \"timestamp\": \"2017-02-09T20:49:00Z\", \"comment\": \"/* Plot */ corrected spelling of populous to populace\", \"tags\": [] }, { \"revid\": 755044891, \"parentid\": 747568551, \"minor\": false, \"user\": \"122.108.141.214\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2016-12-15T23:12:30Z\", \"comment\": \"/* Reception */\", \"tags\": [] }, { \"revid\": 747568551, \"parentid\": 743693587, \"minor\": false, \"user\": \"God's Godzilla\", \"userid\": 29075594, \"timestamp\": \"2016-11-03T02:49:44Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 743693587, \"parentid\": 738669339, \"minor\": true, \"user\": \"Cydebot\", \"userid\": 1215485, \"timestamp\": \"2016-10-10T19:12:32Z\", \"comment\": \"Robot - Moving category Films set in San Francisco, California to [[:Category:Films set in San Francisco]] per [[WP:CFD|CFD]] at [[Wikipedia:Categories for discussion/Log/2016 September 6]].\", \"tags\": [] }, { \"revid\": 738669339, \"parentid\": 738449012, \"minor\": false, \"user\": \"2602:306:3BA6:F330:1C92:E918:89C6:5C7C\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2016-09-10T11:03:14Z\", \"comment\": \"Undid revision 738449012 by [[Special:Contributions/JonathanDP81|JonathanDP81]] ([[User talk:JonathanDP81|talk]]) no basis for this/appears like mass promotion of non-notable entity over multiple articles\", \"tags\": [] }, { \"revid\": 738449012, \"parentid\": 738361779, \"minor\": false, \"user\": \"JonathanDP81\", \"userid\": 20272, \"timestamp\": \"2016-09-09T01:05:55Z\", \"comment\": \"/* External links */ Anime Abandon\", \"tags\": [] }, { \"revid\": 738361779, \"parentid\": 737932722, \"minor\": true, \"user\": \"GreenC bot\", \"userid\": 27823944, \"timestamp\": \"2016-09-08T14:10:08Z\", \"comment\": \"[[User:Green Cardamom/WaybackMedic 2|WaybackMedic 2]]\", \"tags\": [] }, { \"revid\": 737932722, \"parentid\": 737521419, \"minor\": false, \"user\": \"God's Godzilla\", \"userid\": 29075594, \"timestamp\": \"2016-09-05T22:48:38Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 737521419, \"parentid\": 737335239, \"minor\": true, \"user\": \"I dream of horses\", \"userid\": 9676078, \"timestamp\": \"2016-09-03T10:51:26Z\", \"comment\": \"/* Plot */clean up, [[WP:AWB/T|typo(s) fixed]]: day to day → day-to-day, a unmanned → an unmanned using [[Project:AWB|AWB]]\", \"tags\": [] }, { \"revid\": 737335239, \"parentid\": 735965974, \"minor\": false, \"user\": \"Xfansd\", \"userid\": 9906731, \"timestamp\": \"2016-09-02T03:26:34Z\", \"comment\": \"added [[Category:Discotek Media]] using [[WP:HC|HotCat]]\", \"tags\": [] }, { \"revid\": 735965974, \"parentid\": 735348076, \"minor\": false, \"user\": \"50.45.252.91\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2016-08-24T07:44:25Z\", \"comment\": \"/* Plot */\", \"tags\": [] }, { \"revid\": 735348076, \"parentid\": 726074226, \"minor\": false, \"user\": \"Philthomtru\", \"userid\": 28993305, \"timestamp\": \"2016-08-20T03:39:03Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 726074226, \"parentid\": 726036198, \"minor\": true, \"user\": \"Gabriel Yuji\", \"userid\": 14855220, \"timestamp\": \"2016-06-19T21:13:06Z\", \"comment\": \"note\", \"tags\": [] }, { \"revid\": 726036198, \"parentid\": 725987020, \"minor\": false, \"user\": \"Gabriel Yuji\", \"userid\": 14855220, \"timestamp\": \"2016-06-19T15:53:20Z\", \"comment\": \"Undid revision 725987020 by [[Special:Contributions/FFFFGGGGTTTT|FFFFGGGGTTTT]] ([[User talk:FFFFGGGGTTTT|talk]]): [[WP:COPYRIGHT]] violation; https://www.darkhorse.com/Books/14-766/A-Wind-Named-Amnesia-Invader-Summer-Novel\", \"tags\": [] }, { \"revid\": 725987020, \"parentid\": 721704748, \"minor\": false, \"user\": \"FFFFGGGGTTTT\", \"userid\": 24000278, \"timestamp\": \"2016-06-19T06:24:19Z\", \"comment\": \"Added plot\", \"tags\": [] }, { \"revid\": 721704748, \"parentid\": 714330271, \"minor\": true, \"user\": \"Magioladitis\", \"userid\": 1862829, \"timestamp\": \"2016-05-23T15:33:15Z\", \"comment\": \"/* top */Infobox update per BOTREQ using [[Project:AWB|AWB]] (12016)\", \"tags\": [] }, { \"revid\": 714330271, \"parentid\": 699769936, \"minor\": true, \"user\": \"Hugosworld92\", \"userid\": 8986143, \"timestamp\": \"2016-04-09T02:21:16Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 699769936, \"parentid\": 699769916, \"minor\": false, \"user\": \"Dimadick\", \"userid\": 24198, \"timestamp\": \"2016-01-14T10:36:14Z\", \"comment\": \"/* External links */\", \"tags\": [] }, { \"revid\": 699769916, \"parentid\": 688407381, \"minor\": false, \"user\": \"Dimadick\", \"userid\": 24198, \"timestamp\": \"2016-01-14T10:36:00Z\", \"comment\": \"/* External links */\", \"tags\": [] }, { \"revid\": 688407381, \"parentid\": 682893931, \"minor\": false, \"user\": \"Gabriel Yuji\", \"userid\": 14855220, \"timestamp\": \"2015-10-31T18:42:50Z\", \"comment\": \"+clean up\", \"tags\": [] }, { \"revid\": 682893931, \"parentid\": 647309403, \"minor\": false, \"user\": \"G S Palmer\", \"userid\": 19957214, \"timestamp\": \"2015-09-26T20:16:34Z\", \"comment\": \"/* Plot */ Remove [[WP:COPYVIO]] (or at least extensive [[WP:CLOSEPARAPHRASING]]) from here: http://www.darkhorse.com/Books/14-766/A-Wind-Named-Amnesia-Invader-Summer-Novel.\", \"tags\": [] }, { \"revid\": 647309403, \"parentid\": 635643796, \"minor\": true, \"user\": \"Austrollolol\", \"userid\": 15914882, \"timestamp\": \"2015-02-15T23:08:39Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 635643796, \"parentid\": 635477293, \"minor\": true, \"user\": \"Magioladitis\", \"userid\": 1862829, \"timestamp\": \"2014-11-27T12:37:59Z\", \"comment\": \"[[:en:WP:CLEANER|WPCleaner]] v1.34b - Fixed using [[WP:WCW]] (Unicode control characters)\", \"tags\": [] }, { \"revid\": 635477293, \"parentid\": 635477234, \"minor\": false, \"user\": \"177.225.188.182\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2014-11-26T06:07:55Z\", \"comment\": \"\", \"tags\": [\"HHVM\"] }, { \"revid\": 635477234, \"parentid\": 635476262, \"minor\": false, \"user\": \"177.225.188.182\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2014-11-26T06:07:07Z\", \"comment\": \"\", \"tags\": [\"HHVM\"] }, { \"revid\": 635476262, \"parentid\": 635475832, \"minor\": false, \"user\": \"177.225.188.182\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2014-11-26T05:53:46Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 635475832, \"parentid\": 630722108, \"minor\": false, \"user\": \"177.225.188.182\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2014-11-26T05:47:03Z\", \"comment\": \"\", \"tags\": [\"HHVM\"] }, { \"revid\": 630722108, \"parentid\": 630721828, \"minor\": false, \"user\": \"MayorOfIacon\", \"userid\": 21150174, \"timestamp\": \"2014-10-22T23:46:44Z\", \"comment\": \"/* Movie */\", \"tags\": [] }, { \"revid\": 630721828, \"parentid\": 613779950, \"minor\": false, \"user\": \"MayorOfIacon\", \"userid\": 21150174, \"timestamp\": \"2014-10-22T23:44:50Z\", \"comment\": \"/* Voice Cast */\", \"tags\": [] }, { \"revid\": 613779950, \"parentid\": 600994453, \"minor\": true, \"user\": \"John of Reading\", \"userid\": 11308236, \"timestamp\": \"2014-06-21T06:48:07Z\", \"comment\": \"Typo/[[WP:AWB/GF|general]] fixing, replaced: Supervisior → Supervisor using [[Project:AWB|AWB]]\", \"tags\": [] }, { \"revid\": 600994453, \"parentid\": 582556616, \"minor\": false, \"user\": \"Landingdude13\", \"userid\": 20659301, \"timestamp\": \"2014-03-24T06:40:18Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 582556616, \"parentid\": 568759147, \"minor\": true, \"user\": \"Martarius\", \"userid\": 4905985, \"timestamp\": \"2013-11-20T18:21:13Z\", \"comment\": \"/* Staff */ link\", \"tags\": [] }, { \"revid\": 568759147, \"parentid\": 542373369, \"minor\": false, \"user\": \"ChipmunkRaccoon\", \"userid\": 12175819, \"timestamp\": \"2013-08-16T06:33:52Z\", \"comment\": \"/* English */\", \"tags\": [] }, { \"revid\": 542373369, \"parentid\": 521683735, \"minor\": true, \"user\": \"Addbot\", \"userid\": 6569922, \"timestamp\": \"2013-03-06T14:00:01Z\", \"comment\": \"[[User:Addbot|Bot:]] Migrating 3 interwiki links, now provided by [[Wikipedia:Wikidata|Wikidata]] on [[d:q1775616]]\", \"tags\": [] }, { \"revid\": 521683735, \"parentid\": 519802228, \"minor\": true, \"user\": \"TheFarix\", \"userid\": 928626, \"timestamp\": \"2012-11-06T16:03:30Z\", \"comment\": \"Rm [[Category:Anime films]] per [[WP:SUPERCAT]] and [[WP:DIFFUSE]] using [[Project:AWB|AWB]]\", \"tags\": [] }, { \"revid\": 519802228, \"parentid\": 519801842, \"minor\": true, \"user\": \"Netegexi\", \"userid\": 17764591, \"timestamp\": \"2012-10-25T18:21:41Z\", \"comment\": \"/* Reception */ Cleaned up grammatical errors.\", \"tags\": [] }, { \"revid\": 519801842, \"parentid\": 516633991, \"minor\": true, \"user\": \"Netegexi\", \"userid\": 17764591, \"timestamp\": \"2012-10-25T18:19:00Z\", \"comment\": \"/* Plot */\", \"tags\": [] }, { \"revid\": 516633991, \"parentid\": 506677535, \"minor\": true, \"user\": \"TheFarix\", \"userid\": 928626, \"timestamp\": \"2012-10-08T13:15:30Z\", \"comment\": \"Hard cat [[:Category:Japanese novels]] using [[Project:AWB|AWB]]\", \"tags\": [] }, { \"revid\": 506677535, \"parentid\": 493523541, \"minor\": true, \"user\": \"Lotje\", \"userid\": 10434788, \"timestamp\": \"2012-08-10T05:01:43Z\", \"comment\": \"Filling in 4 references using [[WP:REFLINKS|Reflinks]]\", \"tags\": [] }, { \"revid\": 493523541, \"parentid\": 491638209, \"minor\": true, \"user\": \"Grafen\", \"userid\": 307602, \"timestamp\": \"2012-05-20T16:52:21Z\", \"comment\": \"clean up, replaced: it's →  its, removed stub tag using [[Project:AWB|AWB]]\", \"tags\": [] }, { \"revid\": 491638209, \"parentid\": 491637873, \"minor\": false, \"user\": \"68.32.224.181\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2012-05-09T17:40:33Z\", \"comment\": \"/* English */\", \"tags\": [] }, { \"revid\": 491637873, \"parentid\": 483277141, \"minor\": false, \"user\": \"68.32.224.181\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2012-05-09T17:38:38Z\", \"comment\": \"adding Reception section\", \"tags\": [] }, { \"revid\": 483277141, \"parentid\": 482096992, \"minor\": true, \"user\": \"DASHBot\", \"userid\": 11249983, \"timestamp\": \"2012-03-22T00:37:05Z\", \"comment\": \"Scanned 1 urls; found 1 archives (1 in CiteWeb Templates; 1 in References). See [[User:DASHBot/Dead Links]] for settings, shutoff, info, questions.\", \"tags\": [] }, { \"revid\": 482096992, \"parentid\": 476577584, \"minor\": true, \"user\": \"Cydebot\", \"userid\": 1215485, \"timestamp\": \"2012-03-15T22:01:27Z\", \"comment\": \"Robot - Moving category Anime film of 1990 to [[:Category:1990 anime films]] per [[WP:CFD|CFD]] at [[Wikipedia:Categories for discussion/Log/2012 March 7]].\", \"tags\": [] }, { \"revid\": 476577584, \"parentid\": 474031674, \"minor\": false, \"user\": \"Ego White Tray\", \"userid\": 12861237, \"timestamp\": \"2012-02-13T03:30:36Z\", \"comment\": \"Disambiguated: [[Adam Henderson]] → [[Adam Henderson (Canadian voice actor)]]\", \"tags\": [] }, { \"revid\": 474031674, \"parentid\": 455611026, \"minor\": true, \"user\": \"Qetuth\", \"userid\": 15931398, \"timestamp\": \"2012-01-30T13:40:09Z\", \"comment\": \"stub sorting\", \"tags\": [] }, { \"revid\": 455611026, \"parentid\": 455610929, \"minor\": true, \"user\": \"Sp33dyphil\", \"userid\": 11667930, \"timestamp\": \"2011-10-14T23:29:49Z\", \"comment\": \"Reverted edits by [[Special:Contributions/Rmcdonald1921|Rmcdonald1921]] ([[User talk:Rmcdonald1921|talk]]) identified as spam ([[WP:HG|HG]])\", \"tags\": [] }, { \"revid\": 455610929, \"parentid\": 455610720, \"minor\": true, \"user\": \"Rmcdonald1921\", \"userid\": 15412251, \"timestamp\": \"2011-10-14T23:29:05Z\", \"comment\": \"added link\", \"tags\": [] }, { \"revid\": 455610720, \"parentid\": 455610533, \"minor\": true, \"user\": \"Rmcdonald1921\", \"userid\": 15412251, \"timestamp\": \"2011-10-14T23:27:22Z\", \"comment\": \"added link\", \"tags\": [] }, { \"revid\": 455610533, \"parentid\": 453592053, \"minor\": true, \"user\": \"Rmcdonald1921\", \"userid\": 15412251, \"timestamp\": \"2011-10-14T23:25:50Z\", \"comment\": \"added link\", \"tags\": [] }, { \"revid\": 453592053, \"parentid\": 453022962, \"minor\": false, \"user\": \"58.107.189.74\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2011-10-02T21:28:01Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 453022962, \"parentid\": 449811215, \"minor\": false, \"user\": \"GrahamHardy\", \"userid\": 2956291, \"timestamp\": \"2011-09-29T09:46:02Z\", \"comment\": \"added [[Category:Post-apocalyptic novels]] using [[WP:HC|HotCat]]\", \"tags\": [] }, { \"revid\": 449811215, \"parentid\": 444245496, \"minor\": false, \"user\": \"58.107.190.179\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2011-09-11T11:50:44Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 444245496, \"parentid\": 441228816, \"minor\": true, \"user\": \"Cydebot\", \"userid\": 1215485, \"timestamp\": \"2011-08-11T11:21:03Z\", \"comment\": \"Robot - Speedily moving category Madhouse to [[:Category:Madhouse (company)]] per [[WP:CFDS|CFDS]].\", \"tags\": [] }, { \"revid\": 441228816, \"parentid\": 437231278, \"minor\": true, \"user\": \"SporkBot\", \"userid\": 12406635, \"timestamp\": \"2011-07-24T20:20:39Z\", \"comment\": \"Replace template per [[Wikipedia:Templates for discussion/Log/2011 July 10|TFD outcome]]\", \"tags\": [] }, { \"revid\": 437231278, \"parentid\": 427592702, \"minor\": false, \"user\": \"Hibana\", \"userid\": 255068, \"timestamp\": \"2011-07-01T13:56:32Z\", \"comment\": \"update infobox\", \"tags\": [] }, { \"revid\": 427592702, \"parentid\": 415257130, \"minor\": false, \"user\": \"Chicagorob1\", \"userid\": 3114875, \"timestamp\": \"2011-05-05T15:12:27Z\", \"comment\": \"/* Story */\", \"tags\": [] }, { \"revid\": 415257130, \"parentid\": 415255860, \"minor\": false, \"user\": \"187.152.80.192\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2011-02-22T03:24:12Z\", \"comment\": \"/* Story */\", \"tags\": [] }, { \"revid\": 415255860, \"parentid\": 400546569, \"minor\": false, \"user\": \"187.152.80.192\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2011-02-22T03:13:00Z\", \"comment\": \"/* Story */\", \"tags\": [] }, { \"revid\": 400546569, \"parentid\": 386074641, \"minor\": false, \"user\": \"Nihonjoe\", \"userid\": 446342, \"timestamp\": \"2010-12-04T20:49:46Z\", \"comment\": \"date\", \"tags\": [] }, { \"revid\": 386074641, \"parentid\": 364684427, \"minor\": true, \"user\": \"TXiKiBoT\", \"userid\": 3171782, \"timestamp\": \"2010-09-21T09:35:54Z\", \"comment\": \"robot Adding: [[it:Il vento dell'Amnesia]]\", \"tags\": [] }, { \"revid\": 364684427, \"parentid\": 351326029, \"minor\": false, \"user\": \"Jonny2x4\", \"userid\": 246999, \"timestamp\": \"2010-05-28T16:02:23Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 351326029, \"parentid\": 340971860, \"minor\": false, \"user\": \"Tamariki\", \"userid\": 9695764, \"timestamp\": \"2010-03-22T08:35:32Z\", \"comment\": \"/* References */\", \"tags\": [] }, { \"revid\": 340971860, \"parentid\": 340969324, \"minor\": true, \"user\": \"TXiKiBoT\", \"userid\": 3171782, \"timestamp\": \"2010-01-30T21:53:16Z\", \"comment\": \"robot Adding: [[ru:A Wind Named Amnesia]]\", \"tags\": [] }, { \"revid\": 340969324, \"parentid\": 340969283, \"minor\": false, \"user\": \"Deerstop\", \"userid\": 5907538, \"timestamp\": \"2010-01-30T21:38:12Z\", \"comment\": \"/* Novel */\", \"tags\": [] }, { \"revid\": 340969283, \"parentid\": 340969139, \"minor\": false, \"user\": \"Deerstop\", \"userid\": 5907538, \"timestamp\": \"2010-01-30T21:37:52Z\", \"comment\": \"/* Novel */\", \"tags\": [] }, { \"revid\": 340969139, \"parentid\": 340966960, \"minor\": false, \"user\": \"Deerstop\", \"userid\": 5907538, \"timestamp\": \"2010-01-30T21:36:51Z\", \"comment\": \"references\", \"tags\": [] }, { \"revid\": 340966960, \"parentid\": 340962606, \"minor\": false, \"user\": \"Deerstop\", \"userid\": 5907538, \"timestamp\": \"2010-01-30T21:23:44Z\", \"comment\": \"/* Novel */\", \"tags\": [] }, { \"revid\": 340962606, \"parentid\": 336316463, \"minor\": false, \"user\": \"Deerstop\", \"userid\": 5907538, \"timestamp\": \"2010-01-30T20:56:53Z\", \"comment\": \"+ publisher\", \"tags\": [] }, { \"revid\": 336316463, \"parentid\": 335232788, \"minor\": false, \"user\": \"68.58.22.130\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2010-01-07T01:30:38Z\", \"comment\": \"/* Story */\", \"tags\": [] }, { \"revid\": 335232788, \"parentid\": 335232766, \"minor\": true, \"user\": \"TheFarix\", \"userid\": 928626, \"timestamp\": \"2010-01-01T04:04:43Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 335232766, \"parentid\": 330791587, \"minor\": false, \"user\": \"TheFarix\", \"userid\": 928626, \"timestamp\": \"2010-01-01T04:04:26Z\", \"comment\": \"replace deprecated infobox components\", \"tags\": [] }, { \"revid\": 330791587, \"parentid\": 330791418, \"minor\": false, \"user\": \"68.36.239.42\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2009-12-10T03:13:34Z\", \"comment\": \"fixing spaceing of opening paragraph\", \"tags\": [] }, { \"revid\": 330791418, \"parentid\": 330791305, \"minor\": false, \"user\": \"68.36.239.42\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2009-12-10T03:12:10Z\", \"comment\": \"adding wiki links for cpm and manga ent\", \"tags\": [] }, { \"revid\": 330791305, \"parentid\": 328467334, \"minor\": false, \"user\": \"68.36.239.42\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2009-12-10T03:11:25Z\", \"comment\": \"adding info about cpm and manga ent release\", \"tags\": [] }, { \"revid\": 328467334, \"parentid\": 324485437, \"minor\": true, \"user\": \"Rich Farmbrough\", \"userid\": 82835, \"timestamp\": \"2009-11-28T22:59:48Z\", \"comment\": \"Delink dates ([[WP:MOSUNLINKDATES]]) using [[Project:AutoWikiBrowser|AWB]]\", \"tags\": [] }, { \"revid\": 324485437, \"parentid\": 319076982, \"minor\": false, \"user\": \"68.36.239.42\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2009-11-07T17:10:06Z\", \"comment\": \"/* Story */\", \"tags\": [] }, { \"revid\": 319076982, \"parentid\": 315870200, \"minor\": false, \"user\": \"AnmaFinotera\", \"userid\": 181614, \"timestamp\": \"2009-10-10T16:44:23Z\", \"comment\": \"/* Movie */Add [[Category:Central Park Media]] using [[Project:AutoWikiBrowser|AWB]]\", \"tags\": [] }, { \"revid\": 315870200, \"parentid\": 294073075, \"minor\": true, \"user\": \"Xqbot\", \"userid\": 8066546, \"timestamp\": \"2009-09-24T07:52:46Z\", \"comment\": \"robot Adding: [[ja:風の名はアムネジア]]\", \"tags\": [] }, { \"revid\": 294073075, \"parentid\": 273616617, \"minor\": false, \"user\": \"TheFarix\", \"userid\": 928626, \"timestamp\": \"2009-06-03T01:29:20Z\", \"comment\": \"bypass redirect using [[Project:AutoWikiBrowser|AWB]]\", \"tags\": [] }, { \"revid\": 273616617, \"parentid\": 260210218, \"minor\": false, \"user\": \"99.227.39.216\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2009-02-27T08:51:00Z\", \"comment\": \"/* Original Music */\", \"tags\": [] }, { \"revid\": 260210218, \"parentid\": 234928373, \"minor\": false, \"user\": \"TheFarix\", \"userid\": 928626, \"timestamp\": \"2008-12-26T19:28:46Z\", \"comment\": \"Infobox animanga update  using [[Project:AutoWikiBrowser|AWB]]\", \"tags\": [] }, { \"revid\": 234928373, \"parentid\": 227771186, \"minor\": false, \"user\": \"Nihonjoe\", \"userid\": 446342, \"timestamp\": \"2008-08-29T04:53:07Z\", \"comment\": \"rm invalid cat\", \"tags\": [] }, { \"revid\": 227771186, \"parentid\": 219060831, \"minor\": false, \"user\": \"Nihonjoe\", \"userid\": 446342, \"timestamp\": \"2008-07-25T04:39:29Z\", \"comment\": \"cat update\", \"tags\": [] }, { \"revid\": 219060831, \"parentid\": 215298336, \"minor\": false, \"user\": \"TheFarix\", \"userid\": 928626, \"timestamp\": \"2008-06-13T11:37:47Z\", \"comment\": \"rm redundent\", \"tags\": [] }, { \"revid\": 215298336, \"parentid\": 203941576, \"minor\": false, \"user\": \"TheFarix\", \"userid\": 928626, \"timestamp\": \"2008-05-27T16:15:43Z\", \"comment\": \"Infobox animanga update  using [[Project:AutoWikiBrowser|AWB]]\", \"tags\": [] }, { \"revid\": 203941576, \"parentid\": 200774201, \"minor\": false, \"user\": \"70.55.84.42\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2008-04-07T08:23:24Z\", \"comment\": \"read the article, it's a NOVEL by Hideyuki Kikuchi\", \"tags\": [] }, { \"revid\": 200774201, \"parentid\": 200516551, \"minor\": false, \"user\": \"Kevinalewis\", \"userid\": 512560, \"timestamp\": \"2008-03-25T11:28:10Z\", \"comment\": \"recat\", \"tags\": [] }, { \"revid\": 200516551, \"parentid\": 197939266, \"minor\": false, \"user\": \"70.51.8.110\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2008-03-24T11:50:57Z\", \"comment\": \"/* Original Music */\", \"tags\": [] }, { \"revid\": 197939266, \"parentid\": 188744153, \"minor\": false, \"user\": \"70.55.84.89\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2008-03-13T11:31:59Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 188744153, \"parentid\": 184244344, \"minor\": false, \"user\": \"Smackboy69\", \"userid\": 5431952, \"timestamp\": \"2008-02-03T05:16:17Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 184244344, \"parentid\": 182053363, \"minor\": true, \"user\": \"Joeinwap\", \"userid\": 2984591, \"timestamp\": \"2008-01-14T12:55:41Z\", \"comment\": \"Fix broken reference\", \"tags\": [] }, { \"revid\": 182053363, \"parentid\": 168946555, \"minor\": true, \"user\": \"ShelfSkewed\", \"userid\": 1152308, \"timestamp\": \"2008-01-04T06:12:07Z\", \"comment\": \"Disambiguate [[Wicked City]] to [[Wicked City (novel)]]\", \"tags\": [] }, { \"revid\": 168946555, \"parentid\": 167106149, \"minor\": true, \"user\": \"LordAmeth\", \"userid\": 146726, \"timestamp\": \"2007-11-03T14:32:42Z\", \"comment\": \"disambig\", \"tags\": [] }, { \"revid\": 167106149, \"parentid\": 151646257, \"minor\": false, \"user\": \"Quasirandom\", \"userid\": 4141735, \"timestamp\": \"2007-10-26T00:10:28Z\", \"comment\": \"correcting wikilinks\", \"tags\": [] }, { \"revid\": 151646257, \"parentid\": 151645799, \"minor\": true, \"user\": \"77hg66\", \"userid\": 4771505, \"timestamp\": \"2007-08-16T17:57:13Z\", \"comment\": \"/* Novel */\", \"tags\": [] }, { \"revid\": 151645799, \"parentid\": 151645658, \"minor\": true, \"user\": \"77hg66\", \"userid\": 4771505, \"timestamp\": \"2007-08-16T17:55:05Z\", \"comment\": \"/* Original Music */\", \"tags\": [] }, { \"revid\": 151645658, \"parentid\": 151645536, \"minor\": true, \"user\": \"77hg66\", \"userid\": 4771505, \"timestamp\": \"2007-08-16T17:54:23Z\", \"comment\": \"/* Staff */\", \"tags\": [] }, { \"revid\": 151645536, \"parentid\": 151645154, \"minor\": true, \"user\": \"77hg66\", \"userid\": 4771505, \"timestamp\": \"2007-08-16T17:53:48Z\", \"comment\": \"/* Voice Cast */\", \"tags\": [] }, { \"revid\": 151645154, \"parentid\": 151642123, \"minor\": true, \"user\": \"77hg66\", \"userid\": 4771505, \"timestamp\": \"2007-08-16T17:51:45Z\", \"comment\": \"/* Story */\", \"tags\": [] }, { \"revid\": 151642123, \"parentid\": 151583081, \"minor\": true, \"user\": \"77hg66\", \"userid\": 4771505, \"timestamp\": \"2007-08-16T17:34:27Z\", \"comment\": \"/* Staff */\", \"tags\": [] }, { \"revid\": 151583081, \"parentid\": 141504442, \"minor\": true, \"user\": \"77hg66\", \"userid\": 4771505, \"timestamp\": \"2007-08-16T11:19:22Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 141504442, \"parentid\": 139042837, \"minor\": true, \"user\": \"Sjones23\", \"userid\": 3116621, \"timestamp\": \"2007-06-30T00:08:00Z\", \"comment\": \"/* Japanese */\", \"tags\": [] }, { \"revid\": 139042837, \"parentid\": 134937067, \"minor\": false, \"user\": \"TheFarix\", \"userid\": 928626, \"timestamp\": \"2007-06-18T19:37:04Z\", \"comment\": \"DEFAULTSORT\", \"tags\": [] }, { \"revid\": 134937067, \"parentid\": 134923201, \"minor\": true, \"user\": \"Cydebot\", \"userid\": 1215485, \"timestamp\": \"2007-05-31T22:26:13Z\", \"comment\": \"Robot - Moving category Drama anime to Drama anime and manga per [[WP:CFD|CFD]] at [[Wikipedia:Categories for discussion/Log/2007 May 20]].\", \"tags\": [] }, { \"revid\": 134923201, \"parentid\": 118987023, \"minor\": true, \"user\": \"Cydebot\", \"userid\": 1215485, \"timestamp\": \"2007-05-31T21:36:09Z\", \"comment\": \"Robot - Moving category Action anime to Action anime and manga per [[WP:CFD|CFD]] at [[Wikipedia:Categories for discussion/Log/2007 May 20]].\", \"tags\": [] }, { \"revid\": 118987023, \"parentid\": 95262000, \"minor\": true, \"user\": \"LainEverliving\", \"userid\": 3227010, \"timestamp\": \"2007-03-30T07:45:04Z\", \"comment\": \"Corrected Studio in the Infobox, corrected the disambiguous Madhouse link, added Madhouse to Category list.\", \"tags\": [] }, { \"revid\": 95262000, \"parentid\": 91934903, \"minor\": true, \"user\": \"ShakingSpirit\", \"userid\": 917293, \"timestamp\": \"2006-12-19T06:35:07Z\", \"comment\": \"Cleaning up minor errors, and  using [[Project:AWB|AWB]]\", \"tags\": [] }, { \"revid\": 91934903, \"parentid\": 90391286, \"minor\": true, \"user\": \"Tinkleheimer\", \"userid\": 1250732, \"timestamp\": \"2006-12-04T04:49:13Z\", \"comment\": \"Added Genre, Runtime, and Studio\", \"tags\": [] }, { \"revid\": 90391286, \"parentid\": 76163384, \"minor\": false, \"user\": \"Nihonjoe\", \"userid\": 446342, \"timestamp\": \"2006-11-27T07:27:34Z\", \"comment\": \"catsort\", \"tags\": [] }, { \"revid\": 76163384, \"parentid\": 74670134, \"minor\": false, \"user\": \"82.41.138.1\", \"anon\": true, \"userid\": 0, \"timestamp\": \"2006-09-17T03:18:51Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 74670134, \"parentid\": 67487416, \"minor\": false, \"user\": \"Nihonjoe\", \"userid\": 446342, \"timestamp\": \"2006-09-09T05:57:55Z\", \"comment\": \"+cats\", \"tags\": [] }, { \"revid\": 67487416, \"parentid\": 58139808, \"minor\": true, \"user\": \"Remurmur\", \"userid\": 222559, \"timestamp\": \"2006-08-03T18:51:03Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 58139808, \"parentid\": 56738673, \"minor\": false, \"user\": \"Snarfies\", \"userid\": 7509, \"timestamp\": \"2006-06-12T02:48:56Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 56738673, \"parentid\": 56733412, \"minor\": false, \"user\": \"Stamper X\", \"userid\": 1555442, \"timestamp\": \"2006-06-03T23:31:30Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 56733412, \"parentid\": 56733144, \"minor\": false, \"user\": \"Stamper X\", \"userid\": 1555442, \"timestamp\": \"2006-06-03T22:55:40Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 56733144, \"parentid\": 56732703, \"minor\": false, \"user\": \"Stamper X\", \"userid\": 1555442, \"timestamp\": \"2006-06-03T22:53:48Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 56732703, \"parentid\": 56730029, \"minor\": false, \"user\": \"Stamper X\", \"userid\": 1555442, \"timestamp\": \"2006-06-03T22:50:36Z\", \"comment\": \"\", \"tags\": [] }, { \"revid\": 56730029, \"parentid\": 56729984, \"minor\": false, \"user\": \"Stamper X\", \"userid\": 1555442, \"timestamp\": \"2006-06-03T22:31:33Z\", \"comment\": \"/* Story */\", \"tags\": [] }, { \"revid\": 56729984, \"parentid\": 45179665, \"minor\": false, \"user\": \"Stamper X\", \"userid\": 1555442, \"timestamp\": \"2006-06-03T22:31:15Z\", \"comment\": \"/* Story */\", \"tags\": [] }, { \"revid\": 45179665, \"parentid\": 45176674, \"minor\": true, \"user\": \"Nihonjoe\", \"userid\": 446342, \"timestamp\": \"2006-03-23T23:38:59Z\", \"comment\": \"/* Staff */ cat sorting\", \"tags\": [] }, { \"revid\": 45176674, \"parentid\": 33945008, \"minor\": true, \"user\": \"TheFarix\", \"userid\": 928626, \"timestamp\": \"2006-03-23T23:19:53Z\", \"comment\": \"recat\", \"tags\": [] }, { \"revid\": 33945008, \"parentid\": 33805755, \"minor\": true, \"user\": \"Nihonjoe\", \"userid\": 446342, \"timestamp\": \"2006-01-05T06:52:20Z\", \"comment\": \"expanding a little more with scrapings found around the net\", \"tags\": [] }, { \"revid\": 33805755, \"parentid\": 33761316, \"minor\": true, \"user\": \"Nihonjoe\", \"userid\": 446342, \"timestamp\": \"2006-01-04T04:36:26Z\", \"comment\": \"/* Cast */ +cast members\", \"tags\": [] }, { \"revid\": 33761316, \"parentid\": 0, \"minor\": false, \"user\": \"Nihonjoe\", \"userid\": 446342, \"timestamp\": \"2006-01-03T20:55:32Z\", \"comment\": \"Created page\", \"tags\": [] }]\n      }]\n    },\n    \"limits\": { \"revisions\": 500 }\n  }\n};\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/config/meta_samples.js?");

/***/ }),

/***/ "./src/modules/config/samples.js":
/*!***************************************!*\
  !*** ./src/modules/config/samples.js ***!
  \***************************************/
/*! exports provided: samples */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"samples\", function() { return samples; });\nconst samples = {};\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/config/samples.js?");

/***/ }),

/***/ "./src/modules/master.js":
/*!*******************************!*\
  !*** ./src/modules/master.js ***!
  \*******************************/
/*! exports provided: Master */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Master\", function() { return Master; });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"./src/modules/api/index.js\");\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./page */ \"./src/modules/page/index.js\");\n/* harmony import */ var _ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui */ \"./src/modules/ui/index.js\");\n\n\n\n\nclass Master {\n  constructor() {\n    this.api = new _api__WEBPACK_IMPORTED_MODULE_0__[\"APIHandler\"]();\n    this.ui = new _ui__WEBPACK_IMPORTED_MODULE_2__[\"Interface\"]();\n    this.pages = {};\n    this.users = {};\n\n    // test\n\n    this.getMeta('A Wind Named Amnesia');\n  }\n\n  getMeta(title) {\n    // get meta\n    this.api.getRevMeta(title).then(r => {\n      console.log(r);\n    }).catch(e => {\n      console.warn(e);\n    });\n  }\n\n  getPage(title) {\n    // get page via API\n    this.api.getRevContent(title).then(res => {\n      this.onResponse(res);\n    }).catch(err => {\n      console.warn('Err', err);\n    });\n  }\n\n  getSample(title) {\n    // get page via sample dir\n    this.api.getRevSampleContent(title).then(res => {\n      this.onResponse(res);\n    }).catch(err => {\n      console.warn('Err', err);\n    });\n  }\n\n  onResponse(res) {\n    // send response to page\n    const key = this.api.formatTitle(res.query.pages[0].title);\n\n    if (!this.pages[key]) {\n      this.pages[key] = new _page__WEBPACK_IMPORTED_MODULE_1__[\"Page\"](res.query.pages[0]);\n    } else {\n      this.pages[key].addPageData(res.query.pages[0]);\n    }\n  }\n}\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/master.js?");

/***/ }),

/***/ "./src/modules/maths/general.js":
/*!**************************************!*\
  !*** ./src/modules/maths/general.js ***!
  \**************************************/
/*! exports provided: clamp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clamp\", function() { return clamp; });\nfunction clamp(n, min, max) {\n  return Math.min(max, Math.max(min, n));\n}\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/maths/general.js?");

/***/ }),

/***/ "./src/modules/maths/index.js":
/*!************************************!*\
  !*** ./src/modules/maths/index.js ***!
  \************************************/
/*! exports provided: clamp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _general__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./general */ \"./src/modules/maths/general.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clamp\", function() { return _general__WEBPACK_IMPORTED_MODULE_0__[\"clamp\"]; });\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/maths/index.js?");

/***/ }),

/***/ "./src/modules/page/analyser.js":
/*!**************************************!*\
  !*** ./src/modules/page/analyser.js ***!
  \**************************************/
/*! exports provided: Analyser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Analyser\", function() { return Analyser; });\n/* harmony import */ var _maths__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../maths */ \"./src/modules/maths/index.js\");\n\nconst TOKEN_SAME = '==';\nconst TOKEN_LEFT = '<<';\nconst TOKEN_RIGHT = '>>';\nconst TOKEN_UNIQUE = '+';\n\nclass Analyser {\n  constructor() {\n    this.regex = {\n      splitText: / /g,\n      prefixOk: /[^a-z]/i\n    };\n    this.tokens = [];\n    this.words = {\n      added: 0,\n      deleted: 0,\n      shifted: 0,\n      total: 0\n    };\n  }\n\n  reset() {\n    this.tokens = [];\n    this.words.added = 0;\n    this.words.deleted = 0;\n    this.words.shifted = 0;\n    this.words.total = 0;\n  }\n\n  getChanged() {\n    if (this.words.total) {\n      return {\n        added: this.words.added / this.words.total,\n        deleted: this.words.deleted / this.words.total,\n        shifted: this.words.shifted / this.words.total\n      };\n    } else {\n      return {\n        added: 0, deleted: 0, shifted: 0\n      };\n    }\n  }\n\n  mark(elem) {\n    // mark element with edit tags\n    let index = 0;\n    let html = elem.html();\n    const noIndex = [];\n    const spanClose = '</span>';\n\n    for (var i = 0, len = this.tokens.length; i < len; ++i) {\n      const token = this.tokens[i][1];\n      const str = this.tokens[i][0];\n\n      if (token != TOKEN_SAME) {\n        let nextIndex = this.getNextIndex(html, str, index);\n\n        if (nextIndex != -1) {\n          const span = this.tokenTag(token) + str + spanClose;\n          html = this.replaceAfterIndex(html, str, span, nextIndex);\n          index = nextIndex + span.length;\n        } else {\n          noIndex.push(str);\n        }\n      } else {\n        // ignore, increment\n        index += str.length;\n      }\n    }\n\n    if (noIndex.length) {\n      console.warn(elem.parent().attr('id'), 'Null index:', noIndex.length, noIndex.join('__'));\n    }\n    elem.html(html);\n  }\n\n  markAnchor(anchor) {\n    const edits = $('<div />', { class: 'item-edits' });\n\n    if (this.words.added) {\n      edits.append('+');\n    }\n    if (this.words.deleted) {\n      edits.append('-');\n    }\n    if (this.words.shifted) {\n      edits.append('>');\n    }\n\n    anchor.append(edits);\n  }\n\n  getNextIndex(text, str, index) {\n    let found = false;\n    let next = 0;\n\n    while (!found) {\n      next = text.indexOf(str, index);\n\n      // check if not substring\n      if (next <= 0) {\n        found = true;\n      } else {\n        if (text[next - 1].search(this.regex.prefixOk) != -1) {\n          found = true;\n        } else {\n          index = next + 1;\n        }\n      }\n    }\n\n    return next;\n  }\n\n  replaceAfterIndex(s, search, replace, index) {\n    return s.substring(0, index) + s.substring(index, s.length).replace(search, replace);\n  }\n\n  sanitisedWordArray(string) {\n    const arr = string.split(this.regex.splitText);\n\n    for (var i = arr.length - 1; i > -1; --i) {\n      if (arr[i].length == 0) {\n        arr.splice(i, 1);\n      }\n    }\n\n    return arr;\n  }\n\n  analyse(s1, s2) {\n    // analyse difference between strings\n    const keys = this.sanitisedWordArray(s1);\n    const a = keys.map(this.getWordValue);\n    const b = this.sanitisedWordArray(s2).map(this.getWordValue);\n\n    // map words to edit tokens\n    this.reset();\n    this.words.total = Math.max(a.length, b.length);\n    let index = 0;\n\n    for (var i = 0, len = a.length; i < len; ++i) {\n      const key = keys[i];\n\n      if (b.length) {\n        const ai = a[i];\n        if (this.eq(ai, b[index])) {\n          this.tokens.push([key, TOKEN_SAME]);\n          b.splice(index, 1);\n          index = Object(_maths__WEBPACK_IMPORTED_MODULE_0__[\"clamp\"])(index, 0, b.length - 1);\n        } else {\n          let success = false;\n\n          // check backward\n          for (var j = index - 1; j > -1; --j) {\n            if (this.eq(ai, b[j])) {\n              this.tokens.push([key, TOKEN_RIGHT]);\n              b.splice(j, 1);\n              index = Object(_maths__WEBPACK_IMPORTED_MODULE_0__[\"clamp\"])(index - 1, 0, b.length - 1);\n              success = true;\n              this.words.shifted++;\n              break;\n            }\n          }\n\n          // check forward\n          if (!success) {\n            for (var j = index + 1, jmax = b.length; j < jmax; ++j) {\n              if (this.eq(ai, b[j])) {\n                this.tokens.push([key, TOKEN_LEFT]);\n                b.splice(j, 1);\n                index = Object(_maths__WEBPACK_IMPORTED_MODULE_0__[\"clamp\"])(index + 1, 0, b.length - 1);\n                success = true;\n                this.words.shifted++;\n                break;\n              }\n            }\n          }\n\n          if (!success) {\n            this.tokens.push([key, TOKEN_UNIQUE]);\n            index = Object(_maths__WEBPACK_IMPORTED_MODULE_0__[\"clamp\"])(index + 1, 0, b.length - 1);\n            this.words.added++;\n          }\n        }\n      } else {\n        this.tokens.push([key, TOKEN_UNIQUE]);\n        this.words.added++;\n      }\n    }\n\n    // unmatched words from second string\n    this.words.deleted = b.length;\n  }\n\n  getWordValue(word) {\n    // get fuzzy word data\n    let n1 = 0;\n    let n2 = 0;\n\n    for (var i = 0, len = word.length; i < len; ++i) {\n      const char = word[i].charCodeAt();\n      n1 += char;\n      n2 ^= i % 3 ? char : -char;\n    }\n\n    return [n1, n2];\n  }\n\n  tokenTag(token) {\n    if (token == TOKEN_UNIQUE) {\n      return '<span class=\"new\">';\n    } else if (token == TOKEN_LEFT) {\n      return '<span class=\"shift-left\">';\n    } else if (token == TOKEN_RIGHT) {\n      return '<span class=\"shift-right\">';\n    } else {\n      return '<span class=\"mark\">';\n    }\n  }\n\n  eq(a, b) {\n    // fuzzy word comparison\n    return a[0] == b[0] && a[1] == b[1];\n  }\n}\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/page/analyser.js?");

/***/ }),

/***/ "./src/modules/page/index.js":
/*!***********************************!*\
  !*** ./src/modules/page/index.js ***!
  \***********************************/
/*! exports provided: Page, Parser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./page */ \"./src/modules/page/page.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Page\", function() { return _page__WEBPACK_IMPORTED_MODULE_0__[\"Page\"]; });\n\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser */ \"./src/modules/page/parser.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Parser\", function() { return _parser__WEBPACK_IMPORTED_MODULE_1__[\"Parser\"]; });\n\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/page/index.js?");

/***/ }),

/***/ "./src/modules/page/page.js":
/*!**********************************!*\
  !*** ./src/modules/page/page.js ***!
  \**********************************/
/*! exports provided: Page */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Page\", function() { return Page; });\n/* harmony import */ var _revision__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./revision */ \"./src/modules/page/revision.js\");\n\n\nclass Page {\n  constructor(data) {\n    // page data container\n    this.id = data.pageid;\n    this.title = data.title;\n    this.currentRevision = 0;\n    this.revisions = [];\n    this.root = $('#content-root');\n    this.target = $('<div />', { class: 'page', id: this.id });\n    this.root.append(this.target);\n\n    // set up page\n    this.addPageData(data);\n  }\n\n  addPageData(page) {\n    // NOTE testing, oldest VS newest\n    const a = new _revision__WEBPACK_IMPORTED_MODULE_0__[\"Revision\"](this.title, page.revisions[0]);\n    const b = new _revision__WEBPACK_IMPORTED_MODULE_0__[\"Revision\"](this.title, page.revisions[page.revisions.length - 1]);\n    this.revisions.push(a, b);\n    this.target.html(this.revisions[this.currentRevision].getHtml());\n    a.compareRevision(b);\n  }\n}\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/page/page.js?");

/***/ }),

/***/ "./src/modules/page/parser.js":
/*!************************************!*\
  !*** ./src/modules/page/parser.js ***!
  \************************************/
/*! exports provided: Parser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Parser\", function() { return Parser; });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ \"./src/modules/config/index.js\");\n\n\nclass Parser {\n  constructor() {\n    this.urlBase = _config__WEBPACK_IMPORTED_MODULE_0__[\"config\"].urlBase;\n    this.map = {\n      placeholder: '___',\n      tags: [[/=====|====|===/, [\"<div class='section-title sub-section italics'>\", \"</div>\"]], [\"==\", [\"<div class='section-title'>\", \"</div>\"]], [\"\\n\", [\"<br />\"]], [\"{{\", [\"<span class='c'>\"]], [\"}}\", [\"</span>\"]], [\"\\\\[\\\\[\", [\"<a>\"]], [\"\\\\]\\\\]\", [\"</a>\"]], [\"'''''\", [\"<span class='bold italics'>\", \"</span>\"]], [\"''\", [\"<span class='italics'>\", \"</span>\"]]],\n      classes: {\n        \"efn\": \"note-ref\",\n        \"notelist\": \"notelist\",\n        \"cite\": \"cite\",\n        \"citation\": \"cite\",\n        \"reflist\": \"reflist\",\n        \"quote box\": \"quote-box\",\n        \"quote\": \"quote\",\n        \"official website\": \"ext-link\"\n      },\n      delete: [\"thumb\", \"about|\", \"expand section\", \"use\", \"infobox\", \"video game reviews\", \"main article\"]\n    };\n    this.sections = {};\n  }\n\n  createWrapper(title, wikitext, wrapperClass) {\n    // get html wrapper for wikitext\n    const wrapper = this.parse(wikitext).addClass(wrapperClass);\n    wrapper.prepend($('<div />', { html: title, class: 'section-title main-title' }));\n    this.addSections(wrapper);\n    this.parseQuotes(wrapper);\n\n    // temp, rm all spans\n    wrapper.find('.section-paragraph').each((i, e) => {\n      const $e = $(e);\n      const tags = $e.children('span, a, ref').before(this.map.placeholder).remove();\n      $e.parent().find('.section-tags').append(tags);\n    });\n\n    return wrapper;\n  }\n\n  addSections(wrapper) {\n    const sections = wrapper.find('.section-title');\n    const last = sections.length - 1;\n    const open = '{{{{';\n    const inner = '{{}}';\n    const close = '}}}}';\n\n    // add tags\n    sections.each((i, e) => {\n      if (i != 0) {\n        $(e).before(close);\n        if (i == last) {\n          wrapper.append(close);\n        }\n      }\n      $(e).before(open);\n      $(e).after(inner);\n    });\n\n    // create html\n    wrapper.html(wrapper.html().replace(new RegExp(open, 'g'), '<div class=\"section\">').replace(new RegExp(inner, 'g'), '<div class=\"section-paragraph\">').replace(new RegExp(close, 'g'), '</div><div class=\"section-tags\"></div></div>').replace(/<br><br><br>/g, '<br>'));\n\n    // format sections\n    let sec = -1;\n    let subsec = 0;\n    const $contents = $('<div />', { class: 'contents' });\n    wrapper.find('.section').eq(0).after($contents);\n    wrapper.find('.section-title').each((i, e) => {\n      const $e = $(e);\n      const title = $e.text().trim().replace(/ /g, '-');\n      const $parent = $e.parent();\n      $parent.data('title', title);\n\n      // add to contents\n      const anchor = this.sanitise(`anchor-${title}`);\n      const anchorId = i + anchor;\n      let text = $(e).text();\n      let itemClass = 'item';\n      $parent.attr('id', anchor);\n      $parent.data('anchor', '#' + anchorId);\n\n      if ($(e).hasClass('sub-section')) {\n        subsec++;\n        text = `${sec}.${subsec} ${text}`;\n        itemClass = itemClass + ' sub-section';\n      } else {\n        sec++;\n        subsec = 0;\n        text = `${sec} ${text}`;\n        if (i == 0) {\n          text += ' (introduction)';\n        }\n      }\n\n      const $item = $('<div />', { class: itemClass, id: anchorId }).append($('<a />', { href: `#${anchor}`, text: text }));\n      $contents.append($item);\n    });\n  }\n\n  parse(wikitext) {\n    // prevent accidental placeholders\n    wikitext = wikitext.replace(new RegExp(this.map.placeholder, 'g'), '');\n\n    // html tags\n    for (var i = 0, len = this.map.tags.length; i < len; ++i) {\n      const key = this.map.tags[i][0];\n      const tags = this.map.tags[i][1];\n      const len = tags.length;\n      let index = 0;\n      wikitext = wikitext.replace(new RegExp(key, 'g'), len == 1 ? tags[index] : e => {\n        return tags[index++ % len];\n      });\n    }\n\n    // create wrapper\n    const wrapper = $('<div />', { html: wikitext });\n\n    // class tags\n    wrapper.find('.c').each((i, e) => {\n      let ok = false;\n      const match = e.innerHTML.toLowerCase();\n\n      for (var key in this.map.classes) {\n        if (this.map.classes.hasOwnProperty(key)) {\n          if (match.indexOf(key) == 0) {\n            e.classList.add(this.map.classes[key]);\n            ok = true;\n            break;\n          }\n        }\n      }\n\n      // delete\n      if (!ok) {\n        for (var i = 0, len = this.map.delete.length; i < len; ++i) {\n          if (match.indexOf(this.map.delete[i]) == 0) {\n            $(e).remove();\n            break;\n          }\n        }\n      }\n    });\n\n    return wrapper;\n  }\n\n  parseQuotes(wrapper) {\n    wrapper.find('.quote-box').each((i, e) => {\n      const arr = $(e).html().split('|');\n      let html = '';\n      let start = false;\n      for (var i = 0, len = arr.length; i < len; ++i) {\n        if (start || arr[i].search(/quote=/) > -1) {\n          start = true;\n          html += arr[i].replace(/quote=/, '');\n        }\n      }\n      $(e).before($('<blockquote />', { html: html })).remove();\n    });\n    wrapper.find('.quote').each((i, e) => {\n      $(e).before($('<blockquote />', { html: $(e).html().split('|')[1] })).remove();\n    });\n  }\n\n  parseAllTags(wrapper) {\n    // insert tags\n    wrapper.find('.section').each((i, e) => {\n      const p = $(e).find('.section-paragraph');\n      const t = $(e).find('.section-tags');\n      const tags = t.children('span, a, ref');\n      let index = 0;\n      let html = p.html().replace(new RegExp(this.map.placeholder, 'g'), x => {\n        return tags[index++].outerHTML;\n      });\n      p.html(html);\n      t.remove();\n    });\n\n    // format\n    this.parseNotes(wrapper);\n    this.parseLinks(wrapper);\n    this.parseReferences(wrapper);\n    this.parseExternalLinks(wrapper);\n  }\n\n  parseNotes(wrapper) {\n    // create notes and link in document\n    const noteList = wrapper.find('.notelist').html('');\n    let notes = 0;\n    wrapper.find('.note-ref').each((i, e) => {\n      const $e = $(e);\n      const letter = this.getLetter(++notes);\n      const id = `note-${letter}`;\n      const linkId = `link-${id}`;\n      const link = $('<sup />').append($('<a />', { html: `[${letter}]`, href: `#${id}`, id: linkId }));\n      let html = $e.html().split('|');\n      html = html.splice(1, html.length - 1).join('&nbsp;');\n      const note = $('<div />', { class: 'note', html: html, id: id });\n      const noteLink = $('<a />', { html: `${letter}.` }).attr('href', `#${linkId}`);\n      note.prepend(noteLink);\n      $e.before(link).remove();\n      noteList.append(note);\n    });\n  }\n\n  parseLinks(wrapper) {\n    wrapper.find('.section-paragraph').each((index, elem) => {\n      $(elem).children('a').each((i, e) => {\n        if (!e.href) {\n          const inner = e.innerHTML.split('|');\n          if (inner[0].search(/File/) == 0) {\n            $(e).remove();\n          } else {\n            e.href = this.urlBase + inner[0].replace(/ /g, '_');\n            e.innerHTML = inner.length > 1 ? inner[1] : e.innerHTML;\n            e.target = '_blank';\n          }\n        }\n      });\n    });\n  }\n\n  parseReferences(wrapper) {\n    const refList = wrapper.find('.reflist').html('<div class=\"col\"></div><div class=\"col\"></div><div class=\"col\"></div>');\n    const columnSize = Math.ceil(wrapper.find('.cite').length / 3);\n    let citations = 0;\n    let col = 0;\n\n    wrapper.find('ref').each((i, e) => {\n      const $e = $(e);\n      const $c = $e.find('.cite');\n      const html = $c.length ? $c.html() : $e.html();\n\n      // unique reference\n      if (html.trim() != '') {\n        const num = ++citations;\n        col += num % columnSize == 0 ? 1 : 0;\n        const id = `ref-${num}`;\n        const cite = $('<div />', { class: 'citation', id: id, html: `${num}.&nbsp;<span class='refs'></span>&nbsp;` + this.referenceText(html) });\n        const linkId = id + '1';\n        const link = $('<sup />').append($('<a />', { html: `[${num}]`, id: linkId, href: `#${id}` }));\n\n        cite.data('number', num);\n        if ($e.attr('name')) {\n          cite.attr('name', $e.attr('name'));\n        }\n\n        cite.find('.refs').append($('<a />', { href: `#${linkId}`, class: 'r', html: '<sup>^</sup>' }));\n        $e.html('').append(link);\n        refList.find('.col').eq(col).append(cite);\n      } else {\n        $e.addClass('ref-defer');\n      }\n    });\n\n    // connect non-unique references\n    wrapper.find('.ref-defer').each((i, e) => {\n      const $e = $(e);\n      const name = $e.attr('name');\n\n      if (name != '') {\n        const selector = `[name='${name}']`;\n        const c = refList.find(selector);\n        const rs = c.find('.r');\n        const numRefs = rs.length;\n        if (numRefs == 1) {\n          rs.html('<sup>^a</sup>');\n        }\n        const linkId = c.attr('id') + '-' + numRefs;\n        const link = $('<sup />').append($('<a />', { html: `<sup>[${c.data('number')}]</sup>`, href: `#${c.attr('id')}`, id: linkId }));\n        $e.append(link);\n        c.find('.refs').append($('<a />', { href: `#${linkId}`, class: 'r', html: '<sup>' + this.getLetter(numRefs + 1) + '</sup>' }));\n      }\n    });\n  }\n\n  parseExternalLinks(wrapper) {\n    wrapper.find('.ext-link').each((i, e) => {\n      const link = $(e).html().split('|');\n      $(e).before($('<a />', { href: link[1], html: link[0] })).remove();\n    });\n  }\n\n  referenceText(html) {\n    const ref = {};\n    let res = '';\n    html = html.split('|');\n\n    if (html.length == 1) {\n      return html[0];\n    }\n\n    html = html.splice(1, html.length - 1);\n\n    for (var i = 0, len = html.length; i < len; ++i) {\n      const pair = html[i].split('=');\n      if (pair.length > 1) {\n        if (pair.length > 2) {\n          pair[1] = pair.splice(1, pair.length - 1).join('=');\n        }\n        ref[pair[0]] = pair[1].trim();\n      }\n    }\n\n    // name\n    if (ref.last || ref.first || ref.first1 || ref.last1) {\n      res += ref.last ? ref.last + (ref.first ? ', ' : ' ') : ref.last1 ? ref.last1 + (ref.first || ref.first1 ? ', ' : ' ') : '';\n      res += ref.first ? ref.first + ' ' : ref.first1 ? ref.first1 + ' ' : '';\n      res += ref.date ? `(${ref.date}) ` : '';\n      res += ref.url ? `<a href=\"${ref.url}\">${ref.title || \"Link\"}</a> ` : '';\n    } else {\n      res += ref.url ? `<a href=\"${ref.url}\">${ref.title || \"Link\"}</a> ` : '';\n    }\n\n    // source\n    res += ref.website ? ref.website + ' ' : '';\n    res += ref.publisher ? ref.publisher + ' ' : '';\n    res += ref.work ? ref.work + ' ' : '';\n\n    // accessed\n    res += ref.accessdate ? ref.accessdate : ref['access-date'] ? ref['access-date'] : '';\n\n    return res;\n  }\n\n  getLetter(n) {\n    return String.fromCharCode(97 + (n - 1) % 26);\n  }\n\n  sanitise(text) {\n    return text.replace(/[^a-z0-9-_]/ig, '');\n  }\n}\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/page/parser.js?");

/***/ }),

/***/ "./src/modules/page/revision.js":
/*!**************************************!*\
  !*** ./src/modules/page/revision.js ***!
  \**************************************/
/*! exports provided: Revision */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Revision\", function() { return Revision; });\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser */ \"./src/modules/page/parser.js\");\n/* harmony import */ var _analyser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./analyser */ \"./src/modules/page/analyser.js\");\n\n\n\nclass Revision {\n  constructor(title, data) {\n    // revision object\n    this.title = title;\n    this.revid = data.revid;\n    this.parentid = data.parentid;\n    this.user = data.user;\n    this.userid = data.anon ? -1 : data.userid;\n    this.timestamp = data.timestamp;\n    this.comment = data.comment || '';\n    this.content = data.content || '';\n\n    // parse given content\n    if (this.content) {\n      this.parse();\n    }\n  }\n\n  parse() {\n    // prep\n    this.sections = {};\n    this.parser = new _parser__WEBPACK_IMPORTED_MODULE_0__[\"Parser\"]();\n    this.analyser = new _analyser__WEBPACK_IMPORTED_MODULE_1__[\"Analyser\"]();\n\n    // parse wikitext\n    this.wrapper = this.parser.createWrapper(this.title, this.content, 'page__inner');\n    this.wrapper.find('.section').each((i, e) => {\n      const id = 'section-' + this.parser.sanitise($(e).data('title'));\n      const p = $(e).find('.section-paragraph');\n      p.attr('id', id);\n      this.sections['#' + id] = p.text().trim();\n    });\n  }\n\n  compareRevision(rev) {\n    // compare revision, marking changes\n    for (var key in this.sections) {\n      if (this.sections.hasOwnProperty(key)) {\n        const parent = $(key).parent();\n\n        if (rev.sections.hasOwnProperty(key)) {\n          this.analyser.analyse(this.sections[key], rev.sections[key]);\n          this.analyser.markAnchor($(parent.data('anchor')));\n          this.analyser.mark($(key));\n        } else {\n          // a new section\n          parent.addClass('new');\n          $(parent.data('anchor')).addClass('new');\n        }\n      }\n    }\n\n    // convert tags to HTML\n    this.parser.parseAllTags(this.wrapper);\n  }\n\n  getHtml() {\n    return this.wrapper;\n  }\n}\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/page/revision.js?");

/***/ }),

/***/ "./src/modules/ui/index.js":
/*!*********************************!*\
  !*** ./src/modules/ui/index.js ***!
  \*********************************/
/*! exports provided: Interface */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interface */ \"./src/modules/ui/interface.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Interface\", function() { return _interface__WEBPACK_IMPORTED_MODULE_0__[\"Interface\"]; });\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/ui/index.js?");

/***/ }),

/***/ "./src/modules/ui/interface.js":
/*!*************************************!*\
  !*** ./src/modules/ui/interface.js ***!
  \*************************************/
/*! exports provided: Interface */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Interface\", function() { return Interface; });\nclass Interface {\n  constructor() {\n    this.root = $('#ui-root');\n    this.root.html('Hello world.');\n  }\n}\n\n\n\n//# sourceURL=webpack://wikihistory/./src/modules/ui/interface.js?");

/***/ })

/******/ });